#BlueJ class context
comment0.target=SokobanGUI
comment0.text=\n\ A\ graphical\ representation\ of\ a\ game\ of\ Sokoban\n\n\ @author\ Jay\ Wright\n\ @version\ December\ 2021\n
comment1.params=
comment1.target=SokobanGUI()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ SokobanGUI\n
comment10.params=
comment10.target=void\ gameWinOption()
comment10.text=\n\ Creates\ a\ dialogue\ box\ that\ allows\ the\ player\ to\ move\ on\ to\ the\ next\ round\n
comment11.params=
comment11.target=int\ numRows()
comment11.text=\n\ gets\ the\ number\ of\ rows\ from\ the\ Sokoban\ model\ code\ and\ assigns\ it\ to\ a\ local\ attribute\n
comment12.params=
comment12.target=int\ numCols()
comment12.text=\n\ gets\ the\ number\ of\ rows\ from\ the\ Sokoban\ model\ code\ and\ assigns\ it\ to\ a\ local\ attribute\n
comment13.params=text
comment13.target=void\ setStatus(java.lang.String)
comment13.text=\n\ Updates\ the\ status\ textbox\ with\ the\ string\ passed\ as\ an\ argument\n\ @param\ text\ is\ the\ updated\ status\ text\n
comment14.params=
comment14.target=void\ makeCharArray()
comment14.text=\n\ Called\ at\ the\ beginning\ of\ the\ level,\ this\ method\ creates\ an\ ArrayList\ of\ Strings\ from\ the\ game\ screen\ text\ file.\ The\ \n\ screenfile\ is\ scanned\ with\ a\ Scanner\ and\ then\ the\ Scanner\ is\ looped\ through\ to\ add\ each\ line\ as\ a\ String\ to\ the\ Array\n
comment15.params=gameRow\ gameCol
comment15.target=char\ getCharFromArray(int,\ int)
comment15.text=\n\ Returns\ a\ single\ character\ representing\ a\ cell\ on\ the\ grid\ of\ gamesquares.\ The\ local\ String\ line\ grabs\ the\ current\ row\n\ from\ the\ ArrayList\ and\ the\ chararacter\ char\ display\ is\ assigned\ to\ the\ character\ in\ the\ column\n\ \n\ @param\ gameRow\ the\ row\ requested\n\ @param\ gameCol\ the\ column\ requested\n\ @return\ the\ character\ representing\ the\ cell\n
comment16.params=file
comment16.target=java.lang.String\ fileAsString(java.io.File)
comment16.text=\n\ Convert\ a\ file\ into\ a\ String\n\ \n\ @param\ file\ the\ file\n\ @return\ the\ file\ as\ a\ string\n
comment17.params=
comment17.target=void\ validMoves()
comment17.text=\n\ Gets\ all\ the\ valid\ moves\ the\ player\ can\ make\ and\ displays\ them\ in\ the\ status\ box\n
comment18.params=args
comment18.target=void\ main(java.lang.String[])
comment18.text=\n\ Main\ method\ called\ to\ start\ the\ game.\ A\ new\ frame\ is\ created\ and\ a\ new\ GUI\ is\ created\ and\ added\n
comment2.params=
comment2.target=void\ makeFrame()
comment2.text=\n\ This\ method\ creates\ the\ new\ game\ frame,\ initialises\ a\ new\ JPanel\ for\ the\ grid\ of\ game\ cells\ and\ initialises\ a\ new\n\ CellPanel\ object\ for\ each\ cell\n
comment3.params=obs\ obj
comment3.target=void\ update(java.util.Observable,\ java.lang.Object)
comment3.text=\n\ Updates\ the\ CellPanels\ when\ the\ model\ code\ changes.\ When\ the\ update\ is\ called\ it\ gets\ the\ character\ of\ the\ Cell\ passed\ in\n\ and\ passes\ that\ to\ the\ changeBackground()\ method\ of\ the\ CellPanel\ to\ update\ its\ appearance\n\ \n\ @param\ obs\ is\ the\ Obserable\n\ @param\ obj\ is\ the\ Cell\n
comment4.params=event
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.text=\n\ Action\ Event\ to\ get\ the\ button\ presses\ for\ undo,\ clear,\ save,\ and\ load\n\ \n\ @param\ event\ is\ the\ action\ event\n
comment5.params=
comment5.target=void\ clear()
comment5.text=\n\ Clears\ the\ game\ back\ to\ a\ new\ game.\ Loops\ through\ the\ grid\ of\ CellPanel\ and\ resets\ their\ appearence.\ Then\ a\ new\ \n\ Sokoban\ game\ is\ called\ and\ is\ registered\ with\ the\ observable.\ Finally\ a\ new\ stack\ of\ moves\ is\ made\n
comment6.params=
comment6.target=void\ undo()
comment6.text=\n\ Undo\ the\ last\ move\ made\ by\ the\ player\ or\ computer\n
comment7.params=
comment7.target=void\ save()
comment7.text=\n\ Saves\ the\ current\ game\ to\ a\ text\ file\ that\ can\ be\ loaded\ later\n
comment8.params=
comment8.target=void\ load()
comment8.text=\n\ Loads\ a\ game\ from\ the\ SAVEGAME\ text\ file\ by\ reading\ each\ line\ of\ the\ file\ and\ calling\ the\ relative\ move()\ method\n
comment9.params=dir
comment9.target=void\ move(Direction)
comment9.text=\n\ If\ it\ is\ safe,\ move\ the\ actor\ to\ the\ next\ cell\ in\ a\ given\ direction\n\ \n\ @param\ dir\ the\ direction\ to\ move\n
numComments=19
